{"changed":false,"filter":false,"title":"jdtest.cpp","tooltip":"/Homework/Hmwk4/jdtest.cpp","value":"// CSCI1300 Fall 2018\n// Author: <Your name>\n// Recitation: <202> â€“ <John Klingner>\n// Cloud9 Workspace Editor Link: <https://ide.c9.io/feli0059/csci1300fl1>\n// Project1 \n\n/*\n    Print \"Welcome to Jeopardy Dice!\"\n    1st turn is always human:\n        print \"It is now human's turn\"\n        create a varibale to store the value of each turn\n        print \"Do you want to roll a dice (Y/N)?:\"\n        create a varible for the decision \n        while the user is answering yes:\n            roll the dice\n            if it rolls 2 or 4 or 5\n                print \"You rolled a \" number rolled\n                print \"Your turn total is \" number rolled plus stored value for previous rolls on the same round\n                ask the user if they want to roll the dice again -- this will repeat the process\n            if it rolls a 3\n                print \"You rolled a \" number rolled\n                print \"Your turn total is \" number rolled plus stored value for previous rolls on the same round\n                assing the value of the round to 15 and finish the turn\n                return the turn value to the total value\n            if it rolls 1 or 6\n                print \"You rolled a \" number rolled\n                print \"Your turn total is \" number rolled plus stored value for previous rolls on the same round\n                assing the value of the round to 0 and finish the turn\n                return the turn value to the total value\n        if the user answesrs no\n            return the turn value to the total value\n        finish human's turn\n        display score\n    computer's turn\n        print \"It is now human's turn\"\n        create a varibale to store the value of each roll\n        create a loop so when the score is greater than 10 it ends the computer's turn\n        roll the dice\n            if it rolls 2 or 4 or 5\n                print \"Computer rolled a \" number rolled\n                print \"Computer turn total is \" number rolled plus stored value for previous rolls on the same round\n                ask the user if they want to roll the dice again -- this will repeat the process\n            if it rolls a 3\n                print \"Computer rolled a \" number rolled\n                print \"Computer turn total is \" number rolled plus stored value for previous rolls on the same round\n                assing the value of the round to 15 and finish the turn\n                return the turn value to the total value\n            if it rolls 1 or 6\n                print \"Computer rolled a \" number rolled\n                print \"Computer turn total is \" number rolled plus stored value for previous rolls on the same round\n                assing the value of the round to 0 and finish the turn\n                return the turn value to the total value\n            end computer turn\n            display score\n    create a loop around human's turn and computer turn so they keep repeating until one of the total scores reaches 100\n    print \"Congratulations! human won this round of jeopardy dice!\" or \"Congratulations! computer won this round of jeopardy dice!\" -- \n         --depending on who reched the score of 100 first\n            \n    \n                \n    \n*/\n\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\n#include <unistd.h>\n#include <stdio.h>\nusing namespace std; \n\n// funtion that generates random number between 1 and 6 for the dice\nint rollDice()\n{\n\treturn random() % 6 + 1; \n}\n\n// function modifies and stores the human score and displays the scores at the end of each human turn\nint total_human(int x, int humanT, int computerT) // passes three variables and returns one\n{\n    humanT += x; // modifies the current score for the human\n    cout << \"computer: \" << computerT << endl; // displays the score for the computer\n    cout << \"human: \" << humanT << endl << endl; // displays the score for the human\n    return x; // return x\n\n}\n\n// function modifies and stores the computer score and displays the scores at the end of each computer turn\nint total_computer(int y, int humanT, int computerT) // passes three variables and returns one\n{\n    computerT += y; // modifies the current score for the human\n    cout << \"computer: \" << computerT << endl; // displays the score for the computer\n    cout << \"human: \" << humanT << endl << endl; // displays the score for the human\n    return y; // return y\n}\n\n// funtion for the turn of the human -- lays out every step for the human's turn\nint turnH(int humanT, int computerT) //passes three variables and returns one\n{\n    cout << \"It is now human's turn\" << endl << endl; // output message\n    int rollT = 0; //create variable to store the value of each turn and initially assign it to 0 \n    char decision; // creating variable for the decision to roll the dice\n    cout << \"Do you want to roll a dice (Y/N)?:\" << endl;  // output message\n    cin >> decision; // user input for the decision to roll the dice\n    while (decision == 'y' || decision == 'Y') // while the decision to roll the dice is yes\n    {\n        int roll = rollDice(); // roll the dice and store the value of the roll as roll\n        if (roll == 2 || roll == 4 || roll == 5) // if the dice rolls to 2,4 or 5\n        {\n            cout << \"You rolled a \" << roll << endl; // output message\n            rollT += roll; //store the value of each turn (past rolls plus current roll)\n            cout << \"Your turn total is \" << rollT << endl; // output message\n            cout << \"Do you want to roll again (Y/N)?:\" << endl; // output message\n            cin >> decision; // user input for the decision\n        }\n        else if (roll == 3) // if the dice rolls 3\n        {\n            cout << \"You rolled a \" << roll << endl; // output message\n            cout << \"Your turn total is 15\" << endl; // output message\n            rollT = 15; // set the value of the rolls for the turn to 15 \n            decision = 'n'; // end turn\n        }\n        else // if dice rolls any other number (1 or 6)\n        {\n            cout << \"You rolled a \" << roll << endl; // output message\n            cout << \"Your turn total is 0\" << endl; // output message\n            rollT = 0; // set the value of the rolls for the turn to 0\n            decision = 'n'; // end turn\n        }\n    }\n       int a = total_human(rollT, humanT, computerT); // create variable a and assign it to call the total_human function\n       return a; // return a\n}\n\n// funtion for the turn of the human -- lays out every step for the human's turn\nint turnC(int humanT , int computerT) //passes three variables and returns one\n{\n    cout << \"It is now computer's turn\" << endl << endl; // output message\n    int rollTC = 0; //create variable to store the value of each turn and initially assign it to 0 \n    int k = 0; // create variable to exit the while loop\n    while (rollTC < 10 && k == 0) // while the total score for the turn is less than 10 and k equals to 0\n    {\n        int roll = rollDice(); // roll the dice\n        if (roll == 2 || roll == 4 || roll == 5) // if the dice rolls to 2,4 or 5\n        {\n            cout << \"Computer rolled a \" << roll << endl; // output message\n            rollTC += roll; //store the value of each turn (past rolls plus current roll)\n            cout << \"Computer turn total is \" << rollTC << endl; // output message\n            k = 0; // k = 0 so the computer rolls the dice again\n        }\n        else if (roll == 3) // if the dice rolls 3\n        {\n            cout << \"Computer rolled a \" << roll << endl; // output message\n            cout << \"Computer turn total is 15\" << endl; // output message\n            rollTC = 15; // set the value of the rolls for the turn to 15\n            k = 1; // k = 1 so the turn ends\n        }\n        else if (roll == 1 || roll == 6) // if dice rolls 1 or 6\n        {\n            cout << \"Computer rolled a \" << roll << endl; // output message\n            cout << \"Computer turn total is 0\" << endl; // output message\n            rollTC = 0; // set the value of the rolls for the turn to 0\n            k = 1; // k = 1 so the turn ends\n        }\n    }\n    return total_computer(rollTC, humanT, computerT); // return the call to the total_computer function\n}\n\n// function displays the final messages of the game\nvoid end_game(int humanT, int computerT) // function takes in 2 parameters and returns nothing\n{\n     if (humanT >= 100) // in the human's score is greater than or equal to 100\n    {\n        cout << \"Congratulations! human won this round of jeopardy dice!\" << endl; // output message -- congratulations/final message\n    }\n    else if (computerT >= 100) // in the computer's score is greater than or equal to 100\n    {\n        cout << \"Congratulations! computer won this round of jeopardy dice!\" << endl; // output message -- congratulations/final message\n    }\n}\n\n// game function -- coordinates what functions to call and display initial message\nvoid game() // void function\n{\n    cout << \"Welcome to Jeopardy Dice!\" << endl << endl; // output message -- welcome message\n    int humanT = 0; // createv ariable for the human's score and assigns its initial value to 0\n    int computerT = 0; // createv ariable for the co computer's score and assigns its initial value to 0\n    while (humanT < 100 && computerT < 100) // while both the scores are under 100\n    {\n        humanT += turnH(humanT , computerT); // calls the human's turn function and updates the human's score\n        if (humanT < 100 && computerT < 100) // if both socres are under 100\n        {\n            computerT += turnC(humanT , computerT); // calls the computer's turn function and updates the computer's score\n        }\n    }\n    end_game(humanT, computerT); // calls endgame function\n}\n\n// main function -- runs program\nint main()\n{\n\tgame(); // calls game function\n\treturn 0; // returns 0\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":1609,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":202,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":99,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1547740668475}